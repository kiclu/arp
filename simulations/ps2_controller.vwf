/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 40000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("ABUS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ABUS[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("ABUS[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ABUS";
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DBUS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DBUS[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("DBUS[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DBUS";
}

SIGNAL("PS2_KBCLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("PS2_KBDAT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RD")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("valid")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("WR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("ld_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("par")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("par_match")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ps2_end")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ps2_par")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ps2_cnt")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ps2_cnt[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ps2_cnt";
}

SIGNAL("ps2_cnt[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ps2_cnt";
}

SIGNAL("ps2_cnt[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ps2_cnt";
}

SIGNAL("ps2_cnt[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ps2_cnt";
}

SIGNAL("dout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dout[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dout";
}

SIGNAL("dout[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dout";
}

SIGNAL("dout[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dout";
}

SIGNAL("dout[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dout";
}

SIGNAL("dout[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dout";
}

SIGNAL("dout[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dout";
}

SIGNAL("dout[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dout";
}

SIGNAL("dout[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dout";
}

SIGNAL("dbnc_clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("ABUS[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12780.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 19000.0;
	}
}

TRANSITION_LIST("ABUS[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("ABUS[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2000;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("DBUS[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("DBUS[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("PS2_KBCLK")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 640.0;
		NODE
		{
			REPEAT = 10;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
		}
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 20800.0;
	}
}

TRANSITION_LIST("PS2_KBDAT")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 2560.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 8000.0;
		LEVEL 1 FOR 2400.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 20640.0;
	}
}

TRANSITION_LIST("RD")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12780.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 19020.0;
	}
}

TRANSITION_LIST("valid")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 39001.0;
	}
}

TRANSITION_LIST("WR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("data[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 9999.0;
		LEVEL 0 FOR 30001.0;
	}
}

TRANSITION_LIST("data[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 9999.0;
		LEVEL 0 FOR 30001.0;
	}
}

TRANSITION_LIST("data[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 9999.0;
		LEVEL 0 FOR 30001.0;
	}
}

TRANSITION_LIST("data[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 9999.0;
		LEVEL 0 FOR 30001.0;
	}
}

TRANSITION_LIST("data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 9999.0;
		LEVEL 0 FOR 30001.0;
	}
}

TRANSITION_LIST("data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 9999.0;
		LEVEL 0 FOR 30001.0;
	}
}

TRANSITION_LIST("data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 9999.0;
		LEVEL 0 FOR 30001.0;
	}
}

TRANSITION_LIST("data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 9999.0;
		LEVEL 0 FOR 30001.0;
	}
}

TRANSITION_LIST("ld_data")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 9999.0;
		LEVEL 0 FOR 30001.0;
	}
}

TRANSITION_LIST("par")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 9999.0;
		LEVEL 0 FOR 30001.0;
	}
}

TRANSITION_LIST("par_match")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 9999.0;
		LEVEL 0 FOR 30001.0;
	}
}

TRANSITION_LIST("ps2_end")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 9999.0;
		LEVEL 0 FOR 30001.0;
	}
}

TRANSITION_LIST("ps2_par")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 9999.0;
		LEVEL 0 FOR 30001.0;
	}
}

TRANSITION_LIST("ps2_cnt[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 9999.0;
		LEVEL 0 FOR 30001.0;
	}
}

TRANSITION_LIST("ps2_cnt[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 9999.0;
		LEVEL 0 FOR 30001.0;
	}
}

TRANSITION_LIST("ps2_cnt[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 9999.0;
		LEVEL 0 FOR 30001.0;
	}
}

TRANSITION_LIST("ps2_cnt[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 9999.0;
		LEVEL 0 FOR 30001.0;
	}
}

TRANSITION_LIST("dout[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 19999.0;
		LEVEL 0 FOR 20001.0;
	}
}

TRANSITION_LIST("dout[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 19999.0;
		LEVEL 0 FOR 20001.0;
	}
}

TRANSITION_LIST("dout[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 19999.0;
		LEVEL 0 FOR 20001.0;
	}
}

TRANSITION_LIST("dout[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 19999.0;
		LEVEL 0 FOR 20001.0;
	}
}

TRANSITION_LIST("dout[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 19999.0;
		LEVEL 0 FOR 20001.0;
	}
}

TRANSITION_LIST("dout[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 19999.0;
		LEVEL 0 FOR 20001.0;
	}
}

TRANSITION_LIST("dout[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 19999.0;
		LEVEL 0 FOR 20001.0;
	}
}

TRANSITION_LIST("dout[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 19999.0;
		LEVEL 0 FOR 20001.0;
	}
}

TRANSITION_LIST("dbnc_clk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 19999.0;
		LEVEL 0 FOR 20001.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "ABUS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ABUS[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
	CHILDREN = 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DBUS[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "RD";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 66;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "WR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 67;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 68;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PS2_KBCLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 69;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PS2_KBDAT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 70;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "dbnc_clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 71;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "valid";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 72;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 73;
	TREE_LEVEL = 0;
	CHILDREN = 74, 75, 76, 77, 78, 79, 80, 81;
}

DISPLAY_LINE
{
	CHANNEL = "data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "ld_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 82;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "par";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 83;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "par_match";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 84;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_end";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 85;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_par";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 86;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_cnt";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 87;
	TREE_LEVEL = 0;
	CHILDREN = 88, 89, 90, 91;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_cnt[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 87;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_cnt[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 87;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_cnt[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 87;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_cnt[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 87;
}

DISPLAY_LINE
{
	CHANNEL = "dout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 92;
	TREE_LEVEL = 0;
	CHILDREN = 93, 94, 95, 96, 97, 98, 99, 100;
}

DISPLAY_LINE
{
	CHANNEL = "dout[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 92;
}

DISPLAY_LINE
{
	CHANNEL = "dout[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 92;
}

DISPLAY_LINE
{
	CHANNEL = "dout[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 92;
}

DISPLAY_LINE
{
	CHANNEL = "dout[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 92;
}

DISPLAY_LINE
{
	CHANNEL = "dout[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 92;
}

DISPLAY_LINE
{
	CHANNEL = "dout[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 92;
}

DISPLAY_LINE
{
	CHANNEL = "dout[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 92;
}

DISPLAY_LINE
{
	CHANNEL = "dout[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 92;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
